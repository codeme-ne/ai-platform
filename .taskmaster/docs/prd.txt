# PRD: AI Tricks Platform - Schema Optimization & Mobile UI Enhancement

Owner: lukasz • Date: 2025-09-15 • Status: Active

## Executive Summary
Transform the AI Tricks Platform into a lean, mobile-first application with optimized Supabase schema, enhanced mobile UX, and high-value content presentation with supporting visuals.

## 1. Problem Statement & Goals

### Current Issues
- **Schema Bloat**: The `public.ki_tricks` table contains 20+ unused fields increasing complexity
- **Mobile UX Broken**: Navigation menu on mobile cannot be clicked/pulled out due to z-index conflicts
- **CSS Conflicts**: Overlapping styles between custom CSS and Tailwind causing layout issues
- **Content Quality**: AI tricks lack depth, actionable value, and visual support
- **Mobile Optimization**: Current responsive design has multiple breakpoint issues

### Goals
1. Strip database to essential fields only (reduce by 60%)
2. Fix critical mobile navigation bug blocking user access
3. Eliminate all CSS/Tailwind conflicts for consistent styling
4. Transform AI tricks into high-value, visually-enhanced content
5. Achieve 100% mobile-optimized responsive design

## 2. Technical Requirements

### Phase 1: Critical Mobile Navigation Fix

**Root Cause Analysis:**
- Header component has z-50 while mobile nav has z-[60]
- Mobile nav positioned at top-[72px] below header causing overlap
- Event propagation blocked by conflicting z-index layers

**Solution:**
1. Fix Header component z-index hierarchy
2. Adjust mobile menu to overlay properly without position conflicts
3. Ensure touch events work on all mobile devices
4. Test on iOS Safari, Chrome Android, Firefox Mobile

### Phase 2: Database Schema Optimization

**Fields to Keep (ki_tricks):**
- id (uuid, PK)
- title (text, required)
- description (text, required)
- category (text, enum via CHECK)
- tools (text[], required)
- steps (text[], required)
- examples (text[], required)
- slug (text, unique)
- why_it_works (text)
- status (text, enum: draft|pending|published|rejected)
- quality_score (integer, 0-100)
- created_at, updated_at, published_at (timestamptz)
- view_count (integer, default 0)

**Fields to Remove:**
- quality_category, like_count, created_by, reviewed_by
- role, industries[], tool_vendor, integrations[]
- estimated_time_minutes, estimated_savings_minutes
- risk_level, evidence_level, prerequisites
- privacy_notes, sources, prompt_examples[], kpi_suggestions[]

**Migration Strategy:**
1. Create migration file: 20250915_minimal_schema_cleanup.sql
2. Use idempotent DROP COLUMN IF EXISTS statements
3. Clean up orphaned indexes and types
4. Regenerate TypeScript types
5. Update all component interfaces

### Phase 3: CSS/Tailwind Cleanup

**Issues to Fix:**
1. Remove excessive !important declarations in globals.css
2. Consolidate z-index values to consistent scale
3. Simplify mobile-specific CSS overrides
4. Convert custom CSS to Tailwind utilities where possible
5. Fix overflow-x issues on mobile devices

**Z-index Scale:**
- Base content: 0
- Dropdowns: 10
- Mobile menu overlay: 20
- Header: 30
- Modals: 40
- Tooltips: 50

### Phase 4: Content Enhancement

**Enhanced Content Structure:**
Each AI trick should include:
1. Compelling title with clear value proposition
2. Tagline: One-line benefit statement
3. Rich description with practical examples
4. Visual elements:
   - Hero image or diagram
   - Step-by-step visual guides
   - Before/after comparisons
5. Structured metadata:
   - Difficulty level (Anfänger/Fortgeschritten/Experte)
   - Time estimate (5 Min, 30 Min, etc.)
   - Prerequisites list
   - Real-world use cases

**Visual Design System:**
- Consistent icon set (Lucide/Heroicons)
- Simple SVG diagrams for concepts
- Code syntax highlighting for technical tricks
- Screenshot annotations where relevant

### Phase 5: Mobile-First Responsive Design

**Breakpoint Strategy:**
- Mobile: 320px - 640px (sm)
- Tablet: 640px - 1024px (md)
- Desktop: 1024px+ (lg)

**Mobile Optimizations:**
1. Typography:
   - Base font: 16px minimum
   - Line height: 1.6 for readability
   - Max paragraph width: 65-75 characters

2. Touch Targets:
   - Minimum: 44x44px (iOS HIG)
   - Spacing: 8px between interactive elements
   - Clear hover/active states

3. Navigation:
   - Sticky header with minimal height
   - Full-screen mobile menu overlay
   - Swipe gestures for filters

4. Performance:
   - Lazy loading for images
   - Reduced animations on mobile
   - GPU-accelerated scrolling

## 3. Implementation Tasks

### Week 1: Critical Fixes & Foundation
- Day 1: Fix mobile navigation z-index bug
- Day 2: Test mobile menu on multiple devices
- Day 3: Create and test database migration
- Day 4: Update TypeScript types and components
- Day 5: Deploy to staging environment

### Week 2: Style System & Mobile UX
- Day 1-2: CSS/Tailwind audit and cleanup
- Day 3: Implement consistent z-index scale
- Day 4: Mobile responsive improvements
- Day 5: Cross-browser testing

### Week 3: Content Enhancement
- Day 1-2: Design content structure and templates
- Day 3: Create visual assets and icons
- Day 4: Develop 10+ enhanced AI tricks
- Day 5: Implement content in database

### Week 4: Polish & Launch
- Day 1-2: Performance optimization
- Day 3: Accessibility audit (WCAG 2.1 AA)
- Day 4: Final testing and bug fixes
- Day 5: Production deployment

## 4. Success Metrics

### Technical KPIs
- Database size reduction: >60%
- Page load time: <2s on 3G
- Lighthouse mobile score: >90
- Zero CSS conflicts logged

### User Experience KPIs
- Mobile bounce rate: <40%
- Average session duration: >3 minutes
- Trick completion rate: >60%
- Mobile navigation success rate: 100%

### Content Quality KPIs
- Average quality_score: >75
- User engagement (shares/saves): +50%
- Visual content present: 100% of tricks
- Clear value proposition: 100% of tricks

## 5. Testing Requirements

### Mobile Device Testing
- iPhone 12/13 (Safari)
- Samsung Galaxy S21 (Chrome)
- iPad Air (Safari)
- Chrome Mobile (Android)
- Firefox Mobile

### Automated Testing
- Mobile menu open/close functionality
- Filter selection on mobile
- Trick card interactions
- Form submissions on mobile
- Infinite scroll/pagination

### Performance Testing
- Network throttling (3G/4G)
- CPU throttling (4x slowdown)
- Memory usage profiling
- Bundle size analysis

## 6. Risk Assessment & Mitigation

### High Risk
- Mobile navigation fix breaks desktop
  - Mitigation: Thorough testing, feature flag for rollback

- Data loss during migration
  - Mitigation: Full backup, test on staging first

### Medium Risk
- Visual assets increase load time
  - Mitigation: WebP format, lazy loading, CDN

- CSS cleanup breaks existing styles
  - Mitigation: Visual regression testing, incremental changes

## 7. Dependencies

### External Services
- Supabase (database, auth)
- Vercel (hosting, edge functions)
- Image optimization service (Cloudinary/Uploadthing)

### Development Tools
- Tailwind CSS v3.4+
- Next.js 15
- TypeScript 5.3+
- Playwright (E2E testing)

## 8. Launch Checklist

### Pre-Launch
- [ ] Mobile navigation issues resolved
- [ ] Database migration tested on staging
- [ ] CSS conflicts eliminated
- [ ] 10+ tricks enhanced with visuals
- [ ] Mobile testing on 5+ devices
- [ ] Performance benchmarks met
- [ ] Accessibility audit passed

### Launch Day
- [ ] Database backup completed
- [ ] Migration scripts ready
- [ ] Monitoring dashboards active
- [ ] Rollback plan documented

### Post-Launch
- [ ] Monitor error rates (first 24h)
- [ ] Gather user feedback
- [ ] Performance metrics review
- [ ] Bug triage and hotfix process

---

*This PRD represents a comprehensive overhaul focusing on mobile excellence and content value. Success depends on meticulous attention to mobile UX details and commitment to high-quality, visually-enhanced content.*